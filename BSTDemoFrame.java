package bstdemo_ce160059;

import java.awt.BorderLayout;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author CE160059 Le Ha Phuong Uyen
 */
public class BSTDemoFrame extends javax.swing.JFrame {

    BSTPaper p;
    BSTree tree;

    /**
     * Creates new form BSTDemoFrame
     */
    public BSTDemoFrame() {
        initComponents();

        // maximize the frame
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);

        // depend on your screen resolution to set it so the tree can be drawed in center.
        int screenWidth = 1920;

        tree = new BSTree(screenWidth, 100);
        p = new BSTPaper(tree, screenWidth, 100);
        pnlPaper.setSize(screenWidth, 1080);
        pnlPaper.setLayout(new BorderLayout());
        pnlPaper.add(p, BorderLayout.CENTER);

        txtTraversalResult.setEditable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlConfig = new javax.swing.JPanel();
        lblNodeValue = new javax.swing.JLabel();
        txtNodeValue = new javax.swing.JTextField();
        btnAddNode = new javax.swing.JButton();
        btnAddRandomValue = new javax.swing.JButton();
        btnPreOrderTraversal = new javax.swing.JButton();
        btnInOrderTraversal = new javax.swing.JButton();
        btnPostOrderTraversal = new javax.swing.JButton();
        txtTraversalResult = new javax.swing.JTextField();
        btnFindNode = new javax.swing.JButton();
        btnDeleteNode = new javax.swing.JButton();
        btnClearTree = new javax.swing.JButton();
        btnBalancing = new javax.swing.JButton();
        btnBFSTraversal = new javax.swing.JButton();
        bntDFSTraversal = new javax.swing.JButton();
        pnlPaper = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Binary Search Tree");
        setName("frmBSTDemo"); // NOI18N

        pnlConfig.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED)), "Configuration", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 1, 36), new java.awt.Color(0, 153, 153))); // NOI18N
        pnlConfig.setToolTipText("");
        pnlConfig.setName(""); // NOI18N

        lblNodeValue.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        lblNodeValue.setForeground(new java.awt.Color(153, 51, 0));
        lblNodeValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNodeValue.setText("Node's value");

        txtNodeValue.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        txtNodeValue.setText("0");
        txtNodeValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNodeValueActionPerformed(evt);
            }
        });

        btnAddNode.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnAddNode.setForeground(new java.awt.Color(153, 102, 0));
        btnAddNode.setText("Add ");
        btnAddNode.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNodeActionPerformed(evt);
            }
        });

        btnAddRandomValue.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnAddRandomValue.setForeground(new java.awt.Color(153, 102, 0));
        btnAddRandomValue.setText("Add random ");
        btnAddRandomValue.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddRandomValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRandomValueActionPerformed(evt);
            }
        });

        btnPreOrderTraversal.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnPreOrderTraversal.setForeground(new java.awt.Color(153, 102, 0));
        btnPreOrderTraversal.setText("Pre-order traversal");
        btnPreOrderTraversal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPreOrderTraversal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreOrderTraversalActionPerformed(evt);
            }
        });

        btnInOrderTraversal.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnInOrderTraversal.setForeground(new java.awt.Color(153, 102, 0));
        btnInOrderTraversal.setText("In-order traversal");
        btnInOrderTraversal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnInOrderTraversal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInOrderTraversalActionPerformed(evt);
            }
        });

        btnPostOrderTraversal.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnPostOrderTraversal.setForeground(new java.awt.Color(153, 102, 0));
        btnPostOrderTraversal.setText("Post-order traversal");
        btnPostOrderTraversal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPostOrderTraversal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostOrderTraversalActionPerformed(evt);
            }
        });

        txtTraversalResult.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        txtTraversalResult.setForeground(new java.awt.Color(204, 0, 0));
        txtTraversalResult.setText("Result: None");
        txtTraversalResult.setCaretColor(new java.awt.Color(204, 0, 0));
        txtTraversalResult.setDisabledTextColor(new java.awt.Color(204, 0, 0));

        btnFindNode.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnFindNode.setForeground(new java.awt.Color(153, 102, 0));
        btnFindNode.setText("Find");
        btnFindNode.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnFindNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindNodeActionPerformed(evt);
            }
        });

        btnDeleteNode.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnDeleteNode.setForeground(new java.awt.Color(153, 102, 0));
        btnDeleteNode.setText("Delete");
        btnDeleteNode.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteNodeActionPerformed(evt);
            }
        });

        btnClearTree.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnClearTree.setForeground(new java.awt.Color(153, 102, 0));
        btnClearTree.setText("Clear");
        btnClearTree.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClearTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTreeActionPerformed(evt);
            }
        });

        btnBalancing.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnBalancing.setForeground(new java.awt.Color(153, 102, 0));
        btnBalancing.setText("Balancing");
        btnBalancing.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBalancing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBalancingActionPerformed(evt);
            }
        });

        btnBFSTraversal.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnBFSTraversal.setForeground(new java.awt.Color(153, 102, 0));
        btnBFSTraversal.setText("BFS Traversal");
        btnBFSTraversal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBFSTraversal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBFSTraversalActionPerformed(evt);
            }
        });

        bntDFSTraversal.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        bntDFSTraversal.setForeground(new java.awt.Color(153, 102, 0));
        bntDFSTraversal.setText("DFS Traversal");
        bntDFSTraversal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bntDFSTraversal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntDFSTraversalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlConfigLayout = new javax.swing.GroupLayout(pnlConfig);
        pnlConfig.setLayout(pnlConfigLayout);
        pnlConfigLayout.setHorizontalGroup(
            pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlConfigLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblNodeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNodeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddNode, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddRandomValue, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFindNode, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteNode, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClearTree, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBalancing, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntDFSTraversal, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBFSTraversal, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPreOrderTraversal, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInOrderTraversal, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPostOrderTraversal, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtTraversalResult))
                .addContainerGap())
        );
        pnlConfigLayout.setVerticalGroup(
            pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfigLayout.createSequentialGroup()
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNodeValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNodeValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddNode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddRandomValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFindNode)
                    .addComponent(btnPreOrderTraversal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInOrderTraversal)
                    .addComponent(btnPostOrderTraversal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteNode)
                    .addComponent(btnClearTree)
                    .addComponent(btnBalancing)
                    .addComponent(btnBFSTraversal)
                    .addComponent(bntDFSTraversal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTraversalResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlPaper.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout pnlPaperLayout = new javax.swing.GroupLayout(pnlPaper);
        pnlPaper.setLayout(pnlPaperLayout);
        pnlPaperLayout.setHorizontalGroup(
            pnlPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1787, Short.MAX_VALUE)
        );
        pnlPaperLayout.setVerticalGroup(
            pnlPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 681, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlConfig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(pnlPaper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(pnlConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlPaper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNodeActionPerformed
        p.addNode(Integer.parseInt(txtNodeValue.getText()));
        System.out.println("Text value :" + Integer.parseInt(txtNodeValue.getText()));
    }//GEN-LAST:event_btnAddNodeActionPerformed

    /**
     * Create a random data for the node
     * @param min
     * @param max
     * @return a random number from 0 to 99
     */
    public static int randomNumber(int min, int max) {
        return min + (int) (Math.random() * ((max - min) + 1));
    }

    private void btnAddRandomValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRandomValueActionPerformed
        int a = randomNumber(0, 99);
        System.out.println("Random value: " + a);
        p.addNode(a);
    }//GEN-LAST:event_btnAddRandomValueActionPerformed

    private void btnPreOrderTraversalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreOrderTraversalActionPerformed
        tree.preOrder();
        txtTraversalResult.setText("Pre-order traversal result: " + tree.getTraversalResult());

    }//GEN-LAST:event_btnPreOrderTraversalActionPerformed

    private void btnInOrderTraversalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInOrderTraversalActionPerformed
        tree.inOrder();
        txtTraversalResult.setText("In-order traversal result: " + tree.getTraversalResult());

    }//GEN-LAST:event_btnInOrderTraversalActionPerformed

    private void btnPostOrderTraversalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostOrderTraversalActionPerformed
        tree.postOrder();
        txtTraversalResult.setText("Post-order traversal result: " + tree.getTraversalResult());

    }//GEN-LAST:event_btnPostOrderTraversalActionPerformed

    private void btnFindNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindNodeActionPerformed
        // TODO add your handling code here:
        BSTNode node = this.tree.findNode(Integer.parseInt(txtNodeValue.getText()));
        if (node == null) {
            txtTraversalResult.setText("The node '" + txtNodeValue.getText() + "' is not found in the BST");
            JOptionPane.showMessageDialog(this, "The node '" + txtNodeValue.getText() + "' is not found in the BST");
        } else {
            txtTraversalResult.setText("The node '" + txtNodeValue.getText() + "' is found in the BST: " + this.tree.getTraversalResult());
            p.drawPath();
        }
    }//GEN-LAST:event_btnFindNodeActionPerformed

    private void btnDeleteNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteNodeActionPerformed
        // TODO add your handling code here:
        BSTNode node = this.tree.findNode(Integer.parseInt(txtNodeValue.getText()));
        if (node == null) {
            txtTraversalResult.setText("The node '" + txtNodeValue.getText() + "' is not found in the BST");
            JOptionPane.showMessageDialog(this, "The node '" + txtNodeValue.getText() + "' is not found in the BST");
        } else {
            txtTraversalResult.setText("The node '" + txtNodeValue.getText() + "' is found in the BST: " + this.tree.getTraversalResult());
            p.drawPath();

            if (JOptionPane.showConfirmDialog(this, "Do you really want to delete the node '" + txtNodeValue.getText() + "'?", "Warning", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                p.deleteNode(Integer.parseInt(txtNodeValue.getText()));
            } else {
                this.tree.getPath().clear();
                repaint();
            }
        }
    }//GEN-LAST:event_btnDeleteNodeActionPerformed

    private void btnClearTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTreeActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "Do you really want to clear this tree '" + txtNodeValue.getText() + "'?", "Warning", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            p.clear();
        }
    }//GEN-LAST:event_btnClearTreeActionPerformed

    private void btnBalancingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBalancingActionPerformed
        // TODO add your handling code here:
        p.balancing();
    }//GEN-LAST:event_btnBalancingActionPerformed

    private void btnBFSTraversalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBFSTraversalActionPerformed
        // TODO add your handling code here:
        tree.BFS();
        txtTraversalResult.setText("BFS traversal result: " + tree.getTraversalResult());
    }//GEN-LAST:event_btnBFSTraversalActionPerformed

    private void bntDFSTraversalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntDFSTraversalActionPerformed
        // TODO add your handling code here:
        tree.DFS();
        txtTraversalResult.setText("DFS traversal result: " + tree.getTraversalResult());
    }//GEN-LAST:event_bntDFSTraversalActionPerformed

    private void txtNodeValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNodeValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNodeValueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BSTDemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BSTDemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BSTDemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BSTDemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BSTDemoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntDFSTraversal;
    private javax.swing.JButton btnAddNode;
    private javax.swing.JButton btnAddRandomValue;
    private javax.swing.JButton btnBFSTraversal;
    private javax.swing.JButton btnBalancing;
    private javax.swing.JButton btnClearTree;
    private javax.swing.JButton btnDeleteNode;
    private javax.swing.JButton btnFindNode;
    private javax.swing.JButton btnInOrderTraversal;
    private javax.swing.JButton btnPostOrderTraversal;
    private javax.swing.JButton btnPreOrderTraversal;
    private javax.swing.JLabel lblNodeValue;
    private javax.swing.JPanel pnlConfig;
    private javax.swing.JPanel pnlPaper;
    private javax.swing.JTextField txtNodeValue;
    private javax.swing.JTextField txtTraversalResult;
    // End of variables declaration//GEN-END:variables
}
